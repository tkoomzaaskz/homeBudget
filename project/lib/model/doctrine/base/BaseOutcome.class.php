<?php

/**
 * BaseOutcome
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property string $comment
 * @property decimal $cash_total
 * @property OutcomeCategory $Category
 * 
 * @method integer         getCategoryId()  Returns the current record's "category_id" value
 * @method string          getComment()     Returns the current record's "comment" value
 * @method decimal         getCashTotal()   Returns the current record's "cash_total" value
 * @method OutcomeCategory getCategory()    Returns the current record's "Category" value
 * @method Outcome         setCategoryId()  Sets the current record's "category_id" value
 * @method Outcome         setComment()     Sets the current record's "comment" value
 * @method Outcome         setCashTotal()   Sets the current record's "cash_total" value
 * @method Outcome         setCategory()    Sets the current record's "Category" value
 * 
 * @package    finances
 * @subpackage model
 * @author     Tomasz Ducin <tomasz.ducin@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOutcome extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('outcome');
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('comment', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('cash_total', 'decimal', 10, array(
             'type' => 'decimal',
             'notnull' => true,
             'length' => 10,
             'scale' => '2',
             ));

        $this->option('charset', 'utf8');
        $this->option('collate', 'utf8_general_ci');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('OutcomeCategory as Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}