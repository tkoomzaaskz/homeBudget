<?php

/**
 * CategoryTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CategoryTable extends Doctrine_Table
{
  /**
   * Returns an instance of this class.
   *
   * @return object CategoryTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('Category');
  }

  /**
   * Returns query retrieving Category objects with related data. Method used in
   * symfony/doctrine admin backend module list.
   *
   * @return object Doctrine_Query
   */
  public static function getCategoriesBackendListQuery()
  {
    return Doctrine_Query::create()
      ->from('Category c')
      ->leftJoin('c.Parent cp')
      ->leftJoin('c.Creator cr')
      ->orderBy('c.name ASC');
  }

  /**
   * Returns query retrieving top level Category objects.
   *
   * @return object Doctrine_Query
   */
  public static function getTopLevelCategoriesQuery()
  {
    return Doctrine_Query::create()
      ->from('Category c')
      ->where('c.parent_id IS NULL')
      ->orderBy('c.name ASC');
  }

 /**
  * Returns CategoryTreeCollection.
  *
  * @return Collection/Category
  */
  public function getCategoryTreeCollection()
  {
    $categories = Doctrine_Query::create()
      ->from('Category c')
      ->leftJoin('c.Children cc')
      ->where('c.parent_id IS NULL')
      ->orderBy('c.name ASC')
      ->addOrderBy('cc.name ASC')
      ->execute();

    $collection = new Doctrine_Collection('Category');
    foreach ($categories as $category)
    {
      $collection->add($category);
      foreach ($category->getChildren() as $child)
        $collection->add($child);
    }
    return $collection;
  }

  /**
   * Returns query retrieving all categories with events. Used in Category Pie
   * chart.
   *
   * @param Array $chart - from/to
   * @return object Doctrine_Query
   */
  public static function getAllCategoriesWithEventsQuery($chart)
  {
    $signable_clause = $chart['created_by'] ? "AND e.created_by = {$chart['created_by']}" : '';
    $clause = ($chart ? " ON c.id = e.category_id
      {$signable_clause} AND (e.created_at BETWEEN '{$chart['date_from']}' AND '{$chart['date_to']}')" : '');
    return Doctrine_Query::create()
      ->from('Category c')
      ->leftJoin('c.Events e'.$clause)
      ->orderBy('c.name ASC');
  }
}
